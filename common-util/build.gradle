ext {
    // 双引号才能解析这个变量
    // jacksonVersion = '2.17.2'
    set('jacksonVersion', "2.17.2")
}


dependencies {
    // 引入基础设施包
//    api 'com.magicliang:common-concurrent-starter:1.0.0-SNAPSHOT'

    // api 可以传递间接依赖（是 compile 的别名），implementation 不可以（这是为了封装一些 InternalLibrary），所以 implementation执行起来快一些：https://www.jianshu.com/p/dd932f951137，而 api 使用起来灵活一些
    // 所以 util 类模块适合使用 api，而洋葱低层（外围模块）适合使用 implementation
    // https://mvnrepository.com/artifact/com.google.guava/guava
    api 'com.google.guava:guava:31.0.1-jre'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    api 'org.apache.commons:commons-lang3:3.12.0'
    // 注意，collections 和 commons-lang3 是不一样的 lib
    // https://mvnrepository.com/artifact/commons-collections/commons-collections
    api 'commons-collections:commons-collections:3.2.2'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    api "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
    api 'org.apache.httpcomponents:httpcore:4.4.15'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime
    api 'org.apache.httpcomponents:httpmime:4.5.13'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    api 'org.apache.httpcomponents:httpclient:4.5.13'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/fluent-hc
    api 'org.apache.httpcomponents:fluent-hc:4.5.13'

    api 'commons-io:commons-io:2.10.0'

//    testImplementation
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}