// Spring boot 的最新官方文档：https://docs.spring.io/spring-boot/docs/current/reference/html/
plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'java-library'
}

group = 'com.magicliang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
// 需要这个配置才能让 gradlew build 通过

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	// 参考：https://bbs.huaweicloud.com/blogs/257878
	maven { url "https://maven.aliyun.com/repository/public" }
	maven { url "https://repo.huaweicloud.com/repository/maven" }
	mavenLocal()
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.0")
}

dependencies {
	// 非官方版本的 starter 列表：https://www.javatpoint.com/spring-boot-starters
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

// 指定插件作用于子项目
subprojects {
	// 插件 apply plugin，version 语法不一样
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenCentral()
		// 要在本地编译自己的 jar 包，需要引入这个依赖
		mavenLocal()
	}
	// 标准地为子项目引入依赖的方式
	dependencies {
		// 一般的依赖则使用 scope 别名来引用
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		// 让所有的子模块都拥有基本的 spring 依赖
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'io.projectreactor:reactor-test'

		testImplementation('org.springframework.boot:spring-boot-starter-test') {
//					exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
	}

	test {
		useJUnitPlatform()
	}
}

bootJar {
	enabled = false
}